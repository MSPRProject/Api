name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarqube:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"
      - name: Compile the project
        run: |
          chmod +x ./mvnw
          ./mvnw clean compile
      - name: Run SonarQube analysis
        run: |
          ./mvnw sonar:sonar \
            -Dsonar.projectKey=MSPRProject_Api \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.organization=msprproject

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: sanalyz
          POSTGRES_PASSWORD: sanalyz
          POSTGRES_DB: sanalyz
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"
      - name: Run tests
        run: |
          chmod +x ./mvnw
          ./mvnw test

  owasp-zap:
    permissions: write-all
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: sanalyz
          POSTGRES_PASSWORD: sanalyz
          POSTGRES_DB: sanalyz
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"
      - name: Start the application
        run: |
          chmod +x ./mvnw
          nohup ./mvnw spring-boot:run &
          echo "Waiting for the application to start..."
          sleep 30
      - name: Run OWASP ZAP
        uses: zaproxy/action-full-scan@v0.5.0
        with:
          target: "http://localhost:8080"
          rules_file_name: ".zap/rules.tsv"
          docker_name: zaproxy/zap-stable
          fail_action: true
      - name: Stop the application
        run: |
          echo "Stopping the application..."
          pkill -f 'spring-boot:run'

  # e2e-tests:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Clone E2E Scripting Repo
  #       run: git clone https://github.com/your-org/e2e-scripting-repo.git
  #     - name: Run E2E Tests
  #       run: |
  #         echo "Running E2E tests..."

  deploy:
    runs-on: ubuntu-latest
    # needs: [sonarqube, test, owasp-zap, e2e-tests]
    needs: [sonarqube, test, owasp-zap]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"
      - name: Deploy
        run: |
          echo "Deploying application..."
